SetDirectory["/Users/Chris/Documents/Influenza/Data"];

MakeFLhap[hp_, cov_, len_] := Module[{b, i, j},
   b = ConstantArray["-", len]; For[i = 1, i <= Length[b], i++,
    For[j = 1, j <= Length[cov], j++,
      If[cov[[j]] == i, b[[i]] = hp[[j]];
        ];
      ];
    ];
   Return[b];
   ];

NumConvert[hap_] := Module[{n, i},
   n = {};
   For[i = 1, i <= Length[hap], i++,
    If[hap[[i]] != "-", AppendTo[n, i]];
    ];
   Return[n];
   ];

Experiment 1

Hlist = Import["Ferret1/Haps.list", "Table"];
len = 8; (*Number of loci of interest*)

Hlist0 = Table[
   "Ferret1/D0/" <> Hlist[[i, 1]], {i, 1, Length[Hlist]}];
Hlist1 = Table[
   "Ferret1/D1/" <> Hlist[[i, 1]], {i, 1, Length[Hlist]}];
Hlist2 = Table[
   "Ferret1/D3/" <> Hlist[[i, 1]], {i, 1, Length[Hlist]}];
Hlist3 = Table["Ferret1/D5/" <> Hlist[[i, 1]], {i, 1, Length[Hlist]}];

h0 = Table[Import[Hlist0[[i]], "Table"], {i, 1, Length[Hlist]}];
h1 = Table[Import[Hlist1[[i]], "Table"], {i, 1, Length[Hlist]}];
h2 = Table[Import[Hlist2[[i]], "Table"], {i, 1, Length[Hlist]}];
h3 = Table[Import[Hlist3[[i]], "Table"], {i, 1, Length[Hlist]}];

Cov = Import["Ferret1/D0/Cover.out", "Table"];
Allhaps = 
  Import["/Users/Chris/Documents/Intrapatient/Data/NewH5Data/Wilker_\
2012_fastq/Fastq/HA_fastq/Align/Haps1.dat"];
AhapI = Table[{i, Allhaps[[i]]}, {i, 1, Length[Allhaps]}];

Ferret 1 : 
 Find haplotypes in model set.  Output changes in these with time

fhaps0 = Partition[
   Flatten[Table[
     Table[MakeFLhap[h0[[j, ;; , 2 ;;]][[i]], Cov[[j]], len], {i, 1, 
       Length[h0[[j]]]}], {j, 1, Length[h0]}]], len];
fhaps1 = Partition[
   Flatten[Table[
     Table[MakeFLhap[h1[[j, ;; , 2 ;;]][[i]], Cov[[j]], len], {i, 1, 
       Length[h1[[j]]]}], {j, 1, Length[h1]}]], len];
fhaps2 = Partition[
   Flatten[Table[
     Table[MakeFLhap[h2[[j, ;; , 2 ;;]][[i]], Cov[[j]], len], {i, 1, 
       Length[h2[[j]]]}], {j, 1, Length[h2]}]], len];
fhaps3 = Partition[
   Flatten[Table[
     Table[MakeFLhap[h3[[j, ;; , 2 ;;]][[i]], Cov[[j]], len], {i, 1, 
       Length[h3[[j]]]}], {j, 1, Length[h3]}]], len];
ahap = Sort[DeleteDuplicates[Join[fhaps0, fhaps1, fhaps2, fhaps3]], 
   Length[Select[#1, # == "-" &]] < 
     Length[Select[#2, # == "-" &]] &];
Match1 = {};
For[n = 1, n <= Length[ahap], n++,
  a = ahap[[n]];
  m = 0;
  For[i = 1, i <= Length[Allhaps], i++,
   m1 = 0;
   m2 = 0;
   For[j = 1, j <= Length[a], j++,
    If[MemberQ[{"A", "C", "G", "T"}, a[[j]]] == True,
      m1++;
      If[a[[j]] == Allhaps[[i, j]],
       m2++;
       ];
      ];
    ];
   If[m1 == m2,
    m = 1;
    ];
   ];
  AppendTo[Match1, {n, m}];
  ];
miss = Select[Match1, #[[2]] == 0 &][[;; , 1]];
nhaps0 = Flatten[
   Table[Table[{h0[[j, ;; , 1]][[i]], 
      MakeFLhap[h0[[j, ;; , 2 ;;]][[i]], Cov[[j]], len]}, {i, 1, 
      Length[h0[[j]]]}], {j, 1, Length[h0]}], 1];
nhaps1 = Flatten[
   Table[Table[{h1[[j, ;; , 1]][[i]], 
      MakeFLhap[h1[[j, ;; , 2 ;;]][[i]], Cov[[j]], len]}, {i, 1, 
      Length[h1[[j]]]}], {j, 1, Length[h1]}], 1];
nhaps2 = Flatten[
   Table[Table[{h2[[j, ;; , 1]][[i]], 
      MakeFLhap[h2[[j, ;; , 2 ;;]][[i]], Cov[[j]], len]}, {i, 1, 
      Length[h2[[j]]]}], {j, 1, Length[h2]}], 1];
nhaps3 = Flatten[
   Table[Table[{h3[[j, ;; , 1]][[i]], 
      MakeFLhap[h3[[j, ;; , 2 ;;]][[i]], Cov[[j]], len]}, {i, 1, 
      Length[h3[[j]]]}], {j, 1, Length[h3]}], 1];
nreads = Total[Select[nhaps0, Length[#] > 0 &][[;; , 1]]] + 
  Total[Select[nhaps1, Length[#] > 0 &][[;; , 1]]] + 
  Total[Select[nhaps2, Length[#] > 0 &][[;; , 1]]] + 
  Total[Select[nhaps3, Length[#] > 0 &][[;; , 1]]]
mi = {};
For[i = 1, i <= Length[miss], i++,
  a = ahap[[miss[[i]]]];
  AppendTo[mi, Select[nhaps0, #[[2]] == a &]];
  ];
Print[Total[Select[mi, Length[#] > 0 &][[;; , 1, 1]]]];
For[i = 1, i <= Length[miss], i++,
  a = ahap[[miss[[i]]]];
  AppendTo[mi, Select[nhaps1, #[[2]] == a &]];
  ];
Print[Total[Select[mi, Length[#] > 0 &][[;; , 1, 1]]]];
For[i = 1, i <= Length[miss], i++,
  a = ahap[[miss[[i]]]];
  AppendTo[mi, Select[nhaps2, #[[2]] == a &]];
  ];
Print[Total[Select[mi, Length[#] > 0 &][[;; , 1, 1]]]];
For[i = 1, i <= Length[miss], i++,
  a = ahap[[miss[[i]]]];
  AppendTo[mi, Select[nhaps3, #[[2]] == a &]];
  ];
Print[Total[Select[mi, Length[#] > 0 &][[;; , 1, 1]]]];
nocount = Select[mi, Length[#] > 0 &][[;; , 1, 2]];

For[h = 1, h <= Length[h0], h++,
  haps = DeleteDuplicates[
    Join[h0[[h]], h1[[h]], h2[[h]], h3[[h]]][[;; , 2 ;;]]];
  dat = Table[{StringJoin[haps[[i]], ""], 
     If[Length[
        Select[h0[[
          h]], #[[2 ;; Length[h0[[h, 1]]]]] == haps[[i]] &]] > 0, 
      Select[h0[[h]], #[[2 ;; Length[h0[[h, 1]]]]] == haps[[i]] &][[1,
        1]], 0], 
     If[Length[
        Select[h1[[
          h]], #[[2 ;; Length[h1[[h, 1]]]]] == haps[[i]] &]] > 0, 
      Select[h1[[h]], #[[2 ;; Length[h1[[h, 1]]]]] == haps[[i]] &][[1,
        1]], 0], 
     If[Length[
        Select[h2[[
          h]], #[[2 ;; Length[h2[[h, 1]]]]] == haps[[i]] &]] > 0, 
      Select[h2[[h]], #[[2 ;; Length[h2[[h, 1]]]]] == haps[[i]] &][[1,
        1]], 0], 
     If[Length[
        Select[h3[[
          h]], #[[2 ;; Length[h3[[h, 1]]]]] == haps[[i]] &]] > 0, 
      Select[h3[[h]], #[[2 ;; Length[h3[[h, 1]]]]] == haps[[i]] &][[1,
        1]], 0]}, {i, 1, Length[haps]}];
  haps = Select[haps, 
    MemberQ[nocount, MakeFLhap[#, Cov[[h]], 4]] == False &];
  haps2 = Table[StringJoin[haps[[i]], ""], {i, 1, Length[haps]}];
  dat1 = Select[dat, MemberQ[haps2, #[[1]]] == True &];
  dat2 = Select[dat, MemberQ[haps2, #[[1]]] == False &];
  null = ConstantArray[0, Length[dat1[[1]]] - 1];
  ct = Total[dat2[[;; , 2 ;;]]];
  If[ct != null, 
   dat1 = Join[dat1, {Join[{"X"}, Total[dat2[[;; , 2 ;;]]]]}]];
  If[ct == 0, dat1 = Join[dat1, {Join[{"X"}, null]}]];
  (*Print[dat1];*)
  
  Export["/Users/Chris/Documents/Influenza/Data/Ferret1/Hap_data" <> 
    ToString[h] <> ".dat", dat1];
  contribs = 
   Table[Select[
      Table[{AhapI[[i, 1]], AhapI[[i, 2, Cov[[h]]]]}, {i, 1, 
        Length[AhapI]}], MemberQ[{haps[[j]]}, #[[2]]] == True &][[;; ,
       1]], {j, 1, Length[haps]}];
  Export["/Users/Chris/Documents/Influenza/Data/Ferret1/Contribs" <> 
    ToString[h] <> ".dat", contribs];
  ];
